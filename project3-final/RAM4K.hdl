// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/b/RAM4K.hdl
/**
 * Memory of 4K 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // DMux8Way distributes the load signal to one of 8 RAM512 chips based on address[0..2], 
    // reducing unnecessary writes and improving efficiency.
    DMux8Way(in=load, sel=address[0..2], a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);

    // Each RAM512 module stores 512 registers and shares address[3..11], 
    // minimizing redundant address decoding and optimizing memory hierarchy.
    RAM512(in=in, load=a, address=address[3..11], out=oa);
    RAM512(in=in, load=b, address=address[3..11], out=ob);
    RAM512(in=in, load=c, address=address[3..11], out=oc);
    RAM512(in=in, load=d, address=address[3..11], out=od);
    RAM512(in=in, load=e, address=address[3..11], out=oe);
    RAM512(in=in, load=f, address=address[3..11], out=of);
    RAM512(in=in, load=g, address=address[3..11], out=og);
    RAM512(in=in, load=h, address=address[3..11], out=oh);

    // Mux8Way16 selects the correct output from the 8 RAM512 modules based on address[0..2],
    // reducing power consumption by limiting active components at any time.
    Mux8Way16(a=oa, b=ob, c=oc, d=od, e=oe, f=of, g=og, h=oh, sel=address[0..2], out=out);
}